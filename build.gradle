plugins {
    id 'java'
    id 'org.flywaydb.flyway' version '8.5.13'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

repositories {
    mavenCentral()
}

jib {
    to.image = 'drones'
    from.image = 'openjdk:19'
}

processResources {
    doFirst {
        filesMatching('**/*.yaml') {
            expand new File('.env').readLines().findAll { !it.empty }.collectEntries { it.split('=') }
        }
    }
}

build {
    dependsOn(tasks.jibDockerBuild)
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.flywaydb:flyway-core:8.5.13',
            'org.postgresql:postgresql:42.5.0',
            'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5',
            'org.springframework.boot:spring-boot-starter-web:2.7.5',
            'org.springframework.boot:spring-boot-starter-validation:2.7.5',
            'org.springframework.boot:spring-boot-starter-actuator:2.7.5',
            'org.aspectj:aspectjrt:1.9.9.1',
            'commons-io:commons-io:2.11.0',
            'javax.xml.bind:jaxb-api:2.3.1',
            'org.springdoc:springdoc-openapi-ui:1.6.12'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.5'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.5',
            'org.junit.jupiter:junit-jupiter-api:5.9.1',
            'io.zonky.test:embedded-postgres:2.0.1',
            'io.zonky.test:embedded-database-spring-test:2.1.2',
            'org.springframework.boot:spring-boot-starter-webflux:2.7.5'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}

